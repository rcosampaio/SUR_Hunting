model {

      # prior distributions on community level estimates - hyperparameters
			psi ~ dunif(0,1)	# inclusion rate that generates wi
			
			for(z in 1:nguilds){ ### Z loops over the 4 guilds categories
			# mean value (mu)
			# parameter related to abundance
			mu.a0[z] ~ dnorm(0,0.5)  # intercept on lambda
      mu.a1[z] ~ dnorm(0,0.5)  # slope on lambda for hydrography
      mu.a2[z] ~ dnorm(0,0.5)  # slope on lambda for floodded
      mu.a3[z] ~ dnorm(0,0.5)  # slope on lambda for deforestation
      mu.a4[z] ~ dnorm(0,0.5)  # slope on lambda for PA
      mu.a5[z] ~ dnorm(0,0.5)  # slope on lambda for City HP
      mu.a6[z] ~ dnorm(0,0.5)  # slope on lambda for Local HP
      mu.com[z]~ dnorm(0,0.5)  # intecept on lambda for community
			
			# parameter related to detectability
			mu.r0[z] ~ dnorm(0,0.5)  # intercept on lambda
      mu.r1[z] ~ dnorm(0,0.5)  # slope on lambda for hydrography
      mu.r2[z] ~ dnorm(0,0.5)  # slope on lambda for floodded
      mu.r3[z] ~ dnorm(0,0.5)  # slope on lambda for deforestation
      mu.r4[z] ~ dnorm(0,0.5)  # slope on lambda for PA
      mu.r5[z] ~ dnorm(0,0.5)  # slope on lambda for City HP
      mu.r6[z] ~ dnorm(0,0.5)  # slope on lambda for Local HP
      mu.r7[z] ~ dnorm(0,0.5)  # slope on lambda for Effort
      
      # standard deviation
			# parameter related to abundance
      sigma.a0[z] ~ dunif(0,10)	# intercept
      sigma.a1[z] ~ dunif(0,10)	# hydrography
			sigma.a2[z] ~ dunif(0,10)	# floodded
			sigma.a3[z] ~ dunif(0,10)	# deforestation
			sigma.a4[z] ~ dunif(0,10)	# PA
			sigma.a5[z] ~ dunif(0,10)	# City HP
			sigma.a6[z] ~ dunif(0,10)	# Local HP
			sigma.com[z]~ dunif(0,10)	# Community
		
			# parameter related to detectability
			sigma.r0[z] ~ dunif(0,10) # intercept
			sigma.r1[z] ~ dunif(0,10) # hydrography
			sigma.r2[z] ~ dunif(0,10) # floodded
			sigma.r3[z] ~ dunif(0,10) # deforestation
			sigma.r4[z] ~ dunif(0,10) # PA
			sigma.r5[z] ~ dunif(0,10) # City HP
			sigma.r6[z] ~ dunif(0,10) # Local HP
			sigma.r7[z] ~ dunif(0,10) # Effort
			
			# create precision
			# parameter related to abundance
			tau.a0[z] <- pow(sigma.a0[z],-2)
			tau.a1[z] <- pow(sigma.a1[z],-2)
			tau.a2[z] <- pow(sigma.a2[z],-2)
			tau.a3[z] <- pow(sigma.a3[z],-2)
			tau.a4[z] <- pow(sigma.a4[z],-2)
			tau.a5[z] <- pow(sigma.a5[z],-2)
			tau.a6[z] <- pow(sigma.a6[z],-2)
			tau.com[z]<- pow(sigma.com[z],-2)
			
			# parameter related to detectability
			tau.r0[z] <- pow(sigma.r0[z],-2)
			tau.r1[z] <- pow(sigma.r1[z],-2)
			tau.r2[z] <- pow(sigma.r2[z],-2)
			tau.r3[z] <- pow(sigma.r3[z],-2)
			tau.r4[z] <- pow(sigma.r4[z],-2)
			tau.r5[z] <- pow(sigma.r5[z],-2)
			tau.r6[z] <- pow(sigma.r6[z],-2)
			tau.r7[z] <- pow(sigma.r7[z],-2)
      }
			
			# proportion of number of species among guilds, which generated by uninformative Dirichlet prior
			for(i in 1:nguilds){
			prop[i] ~ dgamma(1,1)
			prob[i] <- prop[i]/sum(prop[])
			}

      ## generating priors for Community random variable for each species; governed by community-level hyperparameters
			for(i in 1:nspecies){
			 for (j in 1:n.comunidade){
			    acom[j,i] ~ dnorm (mu.com[G[i]], tau.com[G[i]]) # random effect communities
			 }
			 }
			
			for(i in 1:nspecies) {
				# generating parameters for each species related to abundance; governed by community-level hyperparameters
				a0[i] ~ dnorm(mu.a0[G[i]],tau.a0[G[i]])#I(-10,10)
				a1[i] ~ dnorm(mu.a1[G[i]],tau.a1[G[i]])#I(-10,10)
				a2[i] ~ dnorm(mu.a2[G[i]],tau.a2[G[i]])#I(-10,10)
				a3[i] ~ dnorm(mu.a3[G[i]],tau.a3[G[i]])#I(-10,10)
				a4[i] ~ dnorm(mu.a4[G[i]],tau.a4[G[i]])#I(-10,10)
				a5[i] ~ dnorm(mu.a5[G[i]],tau.a5[G[i]])#I(-10,10)
				a6[i] ~ dnorm(mu.a6[G[i]],tau.a6[G[i]])#I(-10,10)
				
				# generating parameters for each species related to individual detection; governed by community-level hyperparameters
				r0[i] ~ dnorm(mu.r0[G[i]],tau.r0[G[i]])#I(-10,10)
				r1[i] ~ dnorm(mu.r1[G[i]],tau.r1[G[i]])#I(-10,10)
				r2[i] ~ dnorm(mu.r2[G[i]],tau.r2[G[i]])#I(-10,10)
				r3[i] ~ dnorm(mu.r3[G[i]],tau.r3[G[i]])#I(-10,10)
				r4[i] ~ dnorm(mu.r4[G[i]],tau.r4[G[i]])#I(-10,10)
				r5[i] ~ dnorm(mu.r5[G[i]],tau.r5[G[i]])#I(-10,10)
				r6[i] ~ dnorm(mu.r6[G[i]],tau.r6[G[i]])#I(-10,10)
				r7[i] ~ dnorm(mu.r7[G[i]],tau.r7[G[i]])#I(-10,10)

        # indicator variable whether each species is exposed to sampling or not
				w[i] ~ dbern(psi)
				
				# allocating unobserved species into one of the species groups
				G[i] ~ dcat(prob[1:nguilds])
				
				# indicator variables indexing groups to which species belong
				G1[i] <- equals(G[i],1)		# 1 if species = group 1, otherwise 0
				G2[i] <- equals(G[i],2)		# 1 if species = group 2, otherwise 0
				G3[i] <- equals(G[i],3)		# 1 if species = group 3, otherwise 0
				G4[i] <- equals(G[i],4)		# 1 if species = group 4, otherwise 0
				
				#likelihood - Ecological model for latent abundance of species i in sites j
				for(j in 1:nSites){
				# population abundances.
        log(lambda[j,i]) <- a0[i] + a1[i]*Hyd[j] + a2[i]*Flo[j] + a3[i]*Def[j] + a4[i]*UC[j] + a5[i]*HP.C[j] + a6[i]*HP.L[j] + acom[Comunidade[j],i] # equation (4)
        
        N[j,i] ~ dpois(lambda[j,i]) # latent abundance of each species in each site
        #A[j,i] <- N[j,i]*w[i]		# latent abundance only for extant species
				o[j,i] <- step(N[j,i]-1)	# occupancy of each species in each site
				
				# detection process model
				r[j,i] <- 1/(1+exp(-(r0[i] + r1[i]*Hyd[j]  + r2[i]*Flo[j] + r3[i]*Def[j] + r4[i]*UC[j] + r5[i]*HP.C[j] + r6[i]*HP.L[j] + r7[i]*Eff.2[j])))
				p[j,i] <- 1-pow(1-r[j,i],N[j,i])	
				y[j,i] ~ dbin(p[j,i], k[j])  # model observation data as binomial outcome with prob p and k trials
        
        o1[j,i] <- o[j,i]*G1[i]		# occupancy of guild 1
				o2[j,i] <- o[j,i]*G2[i]		# occupancy of guild 2
				o3[j,i] <- o[j,i]*G3[i]		# occupancy of guild 3
				o4[j,i] <- o[j,i]*G4[i]		# occupancy of guild 4
				
				N1[j,i] <- N[j,i]*G1[i]		# abundance of guild 1
				N2[j,i] <- N[j,i]*G2[i]		# abundance of guild 2
				N3[j,i] <- N[j,i]*G3[i]		# abundance of guild 3
				N4[j,i] <- N[j,i]*G4[i]		# abundance of guild 4
				
				}
			}
		## counting species richness at each site
		for(j in 1:nSites){
		SR0[j]	<- sum( o[j,])	# whole species
		SR1[j]	<- sum(o1[j,])	# group 1
		SR2[j]	<- sum(o2[j,])	# group 2
		SR3[j]	<- sum(o3[j,])	# group 3
		SR4[j]	<- sum(o4[j,])	# group 4
	
		## counting abundance at each year
		AB0[j]	<- sum( N[j,])	# whole species
		AB1[j]	<- sum(N1[j,])	# group 1
		AB2[j]	<- sum(N2[j,])	# group 2
		AB3[j]	<- sum(N3[j,])	# group 3
		AB4[j]	<- sum(N4[j,])	# group 4
		}
			
    }
